apiVersion: apps/v1
kind: Deployment
metadata:
  name: home-assistant
  namespace: home-assistant
  labels:
    app.kubernetes.io/name: home-assistant
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: home-assistant
  template:
    metadata:
      labels:
        app.kubernetes.io/name: home-assistant
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      initContainers:
        - name: copy-config
          image: ibmcase/kubectl
          command: ["/bin/bash", "-c"]
          args:
            - >
                cp /config-src/* /config/;
          volumeMounts:
            - mountPath: /config
              name: config-directory
            - mountPath: /config-src
              name: configuration-yaml
      containers:
        - name: home-assistant
          image: "homeassistant/home-assistant:0.103.3"
          imagePullPolicy: IfNotPresent
          ports:
            - name: api
              containerPort: 8123
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: api
            initialDelaySeconds: 60
            failureThreshold: 5
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: api
            initialDelaySeconds: 60
            failureThreshold: 5
            timeoutSeconds: 10
          volumeMounts:
          - mountPath: /config
            name: config-directory
      volumes:
      - name: config-directory
        persistentVolumeClaim:
          claimName:  home-assistant
      - name: configuration-yaml
        configMap:
          name: home-assistant-configuration
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: home-assistant
  namespace: home-assistant
  labels:
    app.kubernetes.io/name: home-assistant
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: home-assistant-configuration
  namespace: home-assistant
data:
  configuration.yaml: |
    # Configure a default setup of Home Assistant (frontend, api, etc)
    default_config:

    # Uncomment this if you are using SSL/TLS, running in Docker container, etc.
    # http:
    #   base_url: example.duckdns.org:8123

    # Text to speech
    tts:
      - platform: google_translate

    group: !include groups.yaml
    automation: !include automations.yaml
    script: !include scripts.yaml
    scene: !include scenes.yaml

  groups.yaml: ''
  automations.yaml: ''
  scripts.yaml: ''
  scenes.yaml: ''
---
apiVersion: v1
kind: Service
metadata:
  name: home-assistant
  namespace: home-assistant
  labels:
    app.kubernetes.io/name: home-assistant
spec:
  type: ClusterIP
  clusterIP: 10.43.241.128
  ports:
    - name: api
      port: 80
      protocol: TCP
      targetPort: 8123
  selector:
    app.kubernetes.io/name: home-assistant
